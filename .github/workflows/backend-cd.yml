name: CD - Deploy Backend
# Set up action
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

# PostgreSQL service container database set up
jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_USER: marlontest
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        ports:
          - 5332:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    # Clone repo & set up Java
    steps:
      - uses: actions/checkout@v4
      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":":github: https://github.com/mbraga24/client-management-api/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":":partydeploy: Deployment started :loading:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      # Generate build number
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text": ":apache_maven: Building with Maven"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      # Automate Docker image build and push using Maven and Jib, tagging it with the build number from the previous step
      - name: Build package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text": ":docker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to ${{ secrets.DOCKER_REPO }}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      # Update Dockerrun.aws.json file with new image tag
      - name: Update Dockerrun.aws.json API image tag with new build number
        run: |
          echo "Dockerrun.aws.json BEOFRE tag update"
          cat Dockerrun.aws.json
          sed -i -E 's_(mbraga01/client-management-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json AFTER tag update"
          cat Dockerrun.aws.json
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text": ":aws: Starting deployment to Elastic Beanstalk"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: backend/Dockerrun.aws.json
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text": ":githubloading: Committing to Repository ${{ secrets.GITHUB_REPO }}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{steps.build-number.outputs.BUILD_NUMBER}}"
          git push
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Deployment completed :success: - ${{ secrets.EB_ENVIRONMENT_URL }} :celebrate:"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status: ${{ job.status }} :party_yay:"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
    
